//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("myvideodatabaseModel", "FilmsRealisateur", "Films", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(db.Films), "Realisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(db.Realisateur))]
[assembly: EdmRelationshipAttribute("myvideodatabaseModel", "FilmsGenre", "Films", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(db.Films), "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(db.Genre))]

#endregion

namespace db
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class myvideodatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new myvideodatabaseEntities object using the connection string found in the 'myvideodatabaseEntities' section of the application configuration file.
        /// </summary>
        public myvideodatabaseEntities() : base("name=myvideodatabaseEntities", "myvideodatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new myvideodatabaseEntities object.
        /// </summary>
        public myvideodatabaseEntities(string connectionString) : base(connectionString, "myvideodatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new myvideodatabaseEntities object.
        /// </summary>
        public myvideodatabaseEntities(EntityConnection connection) : base(connection, "myvideodatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> GenreSet
        {
            get
            {
                if ((_GenreSet == null))
                {
                    _GenreSet = base.CreateObjectSet<Genre>("GenreSet");
                }
                return _GenreSet;
            }
        }
        private ObjectSet<Genre> _GenreSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Films> FilmsSet
        {
            get
            {
                if ((_FilmsSet == null))
                {
                    _FilmsSet = base.CreateObjectSet<Films>("FilmsSet");
                }
                return _FilmsSet;
            }
        }
        private ObjectSet<Films> _FilmsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Realisateur> RealisateurSet
        {
            get
            {
                if ((_RealisateurSet == null))
                {
                    _RealisateurSet = base.CreateObjectSet<Realisateur>("RealisateurSet");
                }
                return _RealisateurSet;
            }
        }
        private ObjectSet<Realisateur> _RealisateurSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GenreSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenreSet(Genre genre)
        {
            base.AddObject("GenreSet", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilmsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilmsSet(Films films)
        {
            base.AddObject("FilmsSet", films);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RealisateurSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealisateurSet(Realisateur realisateur)
        {
            base.AddObject("RealisateurSet", realisateur);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myvideodatabaseModel", Name="Films")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Films : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Films object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="titre">Initial value of the titre property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="numerotation">Initial value of the numerotation property.</param>
        public static Films CreateFilms(global::System.Int32 id, global::System.String titre, global::System.String description, global::System.String numerotation)
        {
            Films films = new Films();
            films.id = id;
            films.titre = titre;
            films.description = description;
            films.numerotation = numerotation;
            return films;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String titre
        {
            get
            {
                return _titre;
            }
            set
            {
                OntitreChanging(value);
                ReportPropertyChanging("titre");
                _titre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("titre");
                OntitreChanged();
            }
        }
        private global::System.String _titre;
        partial void OntitreChanging(global::System.String value);
        partial void OntitreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String numerotation
        {
            get
            {
                return _numerotation;
            }
            set
            {
                OnnumerotationChanging(value);
                ReportPropertyChanging("numerotation");
                _numerotation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("numerotation");
                OnnumerotationChanged();
            }
        }
        private global::System.String _numerotation;
        partial void OnnumerotationChanging(global::System.String value);
        partial void OnnumerotationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myvideodatabaseModel", "FilmsRealisateur", "Realisateur")]
        public EntityCollection<Realisateur> Realisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Realisateur>("myvideodatabaseModel.FilmsRealisateur", "Realisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Realisateur>("myvideodatabaseModel.FilmsRealisateur", "Realisateur", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myvideodatabaseModel", "FilmsGenre", "Genre")]
        public EntityCollection<Genre> Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Genre>("myvideodatabaseModel.FilmsGenre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Genre>("myvideodatabaseModel.FilmsGenre", "Genre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myvideodatabaseModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="nom">Initial value of the nom property.</param>
        public static Genre CreateGenre(global::System.Int32 id, global::System.String nom)
        {
            Genre genre = new Genre();
            genre.id = id;
            genre.nom = nom;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myvideodatabaseModel", "FilmsGenre", "Films")]
        public EntityCollection<Films> Films
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Films>("myvideodatabaseModel.FilmsGenre", "Films");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Films>("myvideodatabaseModel.FilmsGenre", "Films", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myvideodatabaseModel", Name="Realisateur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Realisateur : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Realisateur object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="surname">Initial value of the surname property.</param>
        /// <param name="biography">Initial value of the biography property.</param>
        public static Realisateur CreateRealisateur(global::System.Int32 id, global::System.String name, global::System.String surname, global::System.String biography)
        {
            Realisateur realisateur = new Realisateur();
            realisateur.id = id;
            realisateur.name = name;
            realisateur.surname = surname;
            realisateur.biography = biography;
            return realisateur;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String biography
        {
            get
            {
                return _biography;
            }
            set
            {
                OnbiographyChanging(value);
                ReportPropertyChanging("biography");
                _biography = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("biography");
                OnbiographyChanged();
            }
        }
        private global::System.String _biography;
        partial void OnbiographyChanging(global::System.String value);
        partial void OnbiographyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myvideodatabaseModel", "FilmsRealisateur", "Films")]
        public EntityCollection<Films> Films
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Films>("myvideodatabaseModel.FilmsRealisateur", "Films");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Films>("myvideodatabaseModel.FilmsRealisateur", "Films", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
